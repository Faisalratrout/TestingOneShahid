{"ast":null,"code":"import axios from 'axios';\n// Day 2: Setting up proper axios API configuration\n// Using JSONPlaceholder for now, but structured to easily switch to real backend\nconst API_BASE_URL = 'https://jsonplaceholder.typicode.com';\n\n// Create axios instance with interceptors\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000 // 10 second timeout\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('authToken');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: async credentials => {\n    // Mock login - replace with actual API call\n    await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API delay\n\n    if (credentials.email === 'demo@example.com' && credentials.password === 'password') {\n      const mockUser = {\n        id: '1',\n        email: credentials.email,\n        name: 'Demo User',\n        role: 'user'\n      };\n      const token = 'mock-jwt-token-' + Date.now();\n      return {\n        success: true,\n        data: {\n          user: mockUser,\n          token\n        }\n      };\n    }\n    throw new Error('Invalid credentials');\n  },\n  logout: async () => {\n    // Mock logout\n    await new Promise(resolve => setTimeout(resolve, 500));\n  },\n  verifyToken: async token => {\n    // Mock token verification\n    await new Promise(resolve => setTimeout(resolve, 500));\n    if (token.startsWith('mock-jwt-token')) {\n      return {\n        success: true,\n        data: {\n          id: '1',\n          email: 'demo@example.com',\n          name: 'Demo User',\n          role: 'user'\n        }\n      };\n    }\n    throw new Error('Invalid token');\n  }\n};\n\n// Products API\nexport const productsAPI = {\n  getProducts: async params => {\n    // Mock products data\n    const mockProducts = [{\n      id: '1',\n      name: 'Wireless Headphones',\n      description: 'High-quality wireless headphones with noise cancellation',\n      price: 199.99,\n      category: 'electronics',\n      imageUrl: 'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400',\n      inStock: true,\n      rating: 4.5,\n      reviews: 128\n    }, {\n      id: '2',\n      name: 'Smartphone',\n      description: 'Latest model smartphone with advanced features',\n      price: 799.99,\n      category: 'electronics',\n      imageUrl: 'https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?w=400',\n      inStock: true,\n      rating: 4.8,\n      reviews: 256\n    }, {\n      id: '3',\n      name: 'Running Shoes',\n      description: 'Comfortable running shoes for daily workouts',\n      price: 129.99,\n      category: 'sports',\n      imageUrl: 'https://images.unsplash.com/photo-1542291026-7eec264c27ff?w=400',\n      inStock: false,\n      rating: 4.2,\n      reviews: 89\n    }, {\n      id: '4',\n      name: 'Coffee Maker',\n      description: 'Automatic coffee maker with programmable settings',\n      price: 89.99,\n      category: 'home',\n      imageUrl: 'https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?w=400',\n      inStock: true,\n      rating: 4.0,\n      reviews: 45\n    }, {\n      id: '5',\n      name: 'Laptop Backpack',\n      description: 'Durable laptop backpack with multiple compartments',\n      price: 59.99,\n      category: 'accessories',\n      imageUrl: 'https://images.unsplash.com/photo-1553062407-98eeb64c6a62?w=400',\n      inStock: true,\n      rating: 4.3,\n      reviews: 67\n    }, {\n      id: '6',\n      name: 'Desk Lamp',\n      description: 'LED desk lamp with adjustable brightness',\n      price: 39.99,\n      category: 'home',\n      imageUrl: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400',\n      inStock: true,\n      rating: 4.1,\n      reviews: 23\n    }];\n    await new Promise(resolve => setTimeout(resolve, 800)); // Simulate API delay\n\n    let filteredProducts = [...mockProducts];\n\n    // Apply filters\n    if (params !== null && params !== void 0 && params.category) {\n      filteredProducts = filteredProducts.filter(p => p.category === params.category);\n    }\n    if (params !== null && params !== void 0 && params.minPrice) {\n      filteredProducts = filteredProducts.filter(p => p.price >= params.minPrice);\n    }\n    if (params !== null && params !== void 0 && params.maxPrice) {\n      filteredProducts = filteredProducts.filter(p => p.price <= params.maxPrice);\n    }\n    if ((params === null || params === void 0 ? void 0 : params.inStock) !== undefined) {\n      filteredProducts = filteredProducts.filter(p => p.inStock === params.inStock);\n    }\n    if (params !== null && params !== void 0 && params.minRating) {\n      filteredProducts = filteredProducts.filter(p => p.rating >= params.minRating);\n    }\n\n    // Apply sorting\n    if (params !== null && params !== void 0 && params.sortBy) {\n      filteredProducts.sort((a, b) => {\n        let aVal, bVal;\n        switch (params.sortBy) {\n          case 'name':\n            aVal = a.name;\n            bVal = b.name;\n            break;\n          case 'price':\n            aVal = a.price;\n            bVal = b.price;\n            break;\n          case 'rating':\n            aVal = a.rating;\n            bVal = b.rating;\n            break;\n          default:\n            return 0;\n        }\n        if (params.sortOrder === 'desc') {\n          return bVal > aVal ? 1 : -1;\n        }\n        return aVal > bVal ? 1 : -1;\n      });\n    }\n\n    // Apply pagination\n    const limit = (params === null || params === void 0 ? void 0 : params.limit) || 6;\n    const page = (params === null || params === void 0 ? void 0 : params.page) || 1;\n    const startIndex = (page - 1) * limit;\n    const paginatedProducts = filteredProducts.slice(startIndex, startIndex + limit);\n    const totalPages = Math.ceil(filteredProducts.length / limit);\n    return {\n      success: true,\n      data: {\n        products: paginatedProducts,\n        totalPages\n      }\n    };\n  },\n  getProductById: async id => {\n    const {\n      data\n    } = await productsAPI.getProducts();\n    const product = data.products.find(p => p.id === id);\n    if (!product) {\n      throw new Error('Product not found');\n    }\n    return {\n      success: true,\n      data: product\n    };\n  }\n};\n\n// Orders API\nexport const ordersAPI = {\n  createOrder: async (items, totalAmount) => {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    const mockOrder = {\n      id: 'order-' + Date.now(),\n      userId: '1',\n      items,\n      totalAmount,\n      status: 'pending',\n      createdAt: new Date().toISOString(),\n      shippingAddress: {\n        street: '123 Main St',\n        city: 'San Francisco',\n        state: 'CA',\n        zipCode: '94102',\n        country: 'USA'\n      }\n    };\n    return {\n      success: true,\n      data: mockOrder\n    };\n  },\n  getUserOrders: async userId => {\n    await new Promise(resolve => setTimeout(resolve, 800));\n\n    // Mock orders data\n    const mockOrders = [{\n      id: 'order-1',\n      userId: '1',\n      items: [],\n      totalAmount: 289.98,\n      status: 'delivered',\n      createdAt: '2024-12-15T10:30:00Z',\n      shippingAddress: {\n        street: '123 Main St',\n        city: 'San Francisco',\n        state: 'CA',\n        zipCode: '94102',\n        country: 'USA'\n      }\n    }, {\n      id: 'order-2',\n      userId: '1',\n      items: [],\n      totalAmount: 159.99,\n      status: 'shipped',\n      createdAt: '2024-12-20T14:15:00Z',\n      shippingAddress: {\n        street: '123 Main St',\n        city: 'San Francisco',\n        state: 'CA',\n        zipCode: '94102',\n        country: 'USA'\n      }\n    }];\n    return {\n      success: true,\n      data: mockOrders\n    };\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authAPI","login","credentials","resolve","setTimeout","email","password","mockUser","id","name","role","Date","now","success","data","user","Error","logout","verifyToken","startsWith","productsAPI","getProducts","params","mockProducts","description","price","category","imageUrl","inStock","rating","reviews","filteredProducts","filter","p","minPrice","maxPrice","undefined","minRating","sortBy","sort","a","b","aVal","bVal","sortOrder","limit","page","startIndex","paginatedProducts","slice","totalPages","Math","ceil","length","products","getProductById","product","find","ordersAPI","createOrder","items","totalAmount","mockOrder","userId","createdAt","toISOString","shippingAddress","street","city","state","zipCode","country","getUserOrders","mockOrders"],"sources":["/Users/faratrout/Desktop/e-commdash/src/services/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { LoginCredentials, User, Product, Order, ApiResponse, PaginationParams } from '../types';\n\n// Day 2: Setting up proper axios API configuration\n// Using JSONPlaceholder for now, but structured to easily switch to real backend\nconst API_BASE_URL = 'https://jsonplaceholder.typicode.com';\n\n// Create axios instance with interceptors\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 10000, // 10 second timeout\n});\n\n// Add token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response: AxiosResponse) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('authToken');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: async (credentials: LoginCredentials): Promise<ApiResponse<{ user: User; token: string }>> => {\n    // Mock login - replace with actual API call\n    await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API delay\n    \n    if (credentials.email === 'demo@example.com' && credentials.password === 'password') {\n      const mockUser: User = {\n        id: '1',\n        email: credentials.email,\n        name: 'Demo User',\n        role: 'user'\n      };\n      const token = 'mock-jwt-token-' + Date.now();\n      \n      return {\n        success: true,\n        data: { user: mockUser, token }\n      };\n    }\n    \n    throw new Error('Invalid credentials');\n  },\n\n  logout: async (): Promise<void> => {\n    // Mock logout\n    await new Promise(resolve => setTimeout(resolve, 500));\n  },\n\n  verifyToken: async (token: string): Promise<ApiResponse<User>> => {\n    // Mock token verification\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    if (token.startsWith('mock-jwt-token')) {\n      return {\n        success: true,\n        data: {\n          id: '1',\n          email: 'demo@example.com',\n          name: 'Demo User',\n          role: 'user'\n        }\n      };\n    }\n    \n    throw new Error('Invalid token');\n  }\n};\n\n// Products API\nexport const productsAPI = {\n  getProducts: async (params?: PaginationParams): Promise<ApiResponse<{ products: Product[]; totalPages: number }>> => {\n    // Mock products data\n    const mockProducts: Product[] = [\n      {\n        id: '1',\n        name: 'Wireless Headphones',\n        description: 'High-quality wireless headphones with noise cancellation',\n        price: 199.99,\n        category: 'electronics',\n        imageUrl: 'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400',\n        inStock: true,\n        rating: 4.5,\n        reviews: 128\n      },\n      {\n        id: '2',\n        name: 'Smartphone',\n        description: 'Latest model smartphone with advanced features',\n        price: 799.99,\n        category: 'electronics',\n        imageUrl: 'https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?w=400',\n        inStock: true,\n        rating: 4.8,\n        reviews: 256\n      },\n      {\n        id: '3',\n        name: 'Running Shoes',\n        description: 'Comfortable running shoes for daily workouts',\n        price: 129.99,\n        category: 'sports',\n        imageUrl: 'https://images.unsplash.com/photo-1542291026-7eec264c27ff?w=400',\n        inStock: false,\n        rating: 4.2,\n        reviews: 89\n      },\n      {\n        id: '4',\n        name: 'Coffee Maker',\n        description: 'Automatic coffee maker with programmable settings',\n        price: 89.99,\n        category: 'home',\n        imageUrl: 'https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?w=400',\n        inStock: true,\n        rating: 4.0,\n        reviews: 45\n      },\n      {\n        id: '5',\n        name: 'Laptop Backpack',\n        description: 'Durable laptop backpack with multiple compartments',\n        price: 59.99,\n        category: 'accessories',\n        imageUrl: 'https://images.unsplash.com/photo-1553062407-98eeb64c6a62?w=400',\n        inStock: true,\n        rating: 4.3,\n        reviews: 67\n      },\n      {\n        id: '6',\n        name: 'Desk Lamp',\n        description: 'LED desk lamp with adjustable brightness',\n        price: 39.99,\n        category: 'home',\n        imageUrl: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400',\n        inStock: true,\n        rating: 4.1,\n        reviews: 23\n      }\n    ];\n\n    await new Promise(resolve => setTimeout(resolve, 800)); // Simulate API delay\n\n    let filteredProducts = [...mockProducts];\n\n    // Apply filters\n    if (params?.category) {\n      filteredProducts = filteredProducts.filter(p => p.category === params.category);\n    }\n    if (params?.minPrice) {\n      filteredProducts = filteredProducts.filter(p => p.price >= params.minPrice!);\n    }\n    if (params?.maxPrice) {\n      filteredProducts = filteredProducts.filter(p => p.price <= params.maxPrice!);\n    }\n    if (params?.inStock !== undefined) {\n      filteredProducts = filteredProducts.filter(p => p.inStock === params.inStock);\n    }\n    if (params?.minRating) {\n      filteredProducts = filteredProducts.filter(p => p.rating >= params.minRating!);\n    }\n\n    // Apply sorting\n    if (params?.sortBy) {\n      filteredProducts.sort((a, b) => {\n        let aVal: any, bVal: any;\n        \n        switch (params.sortBy) {\n          case 'name':\n            aVal = a.name;\n            bVal = b.name;\n            break;\n          case 'price':\n            aVal = a.price;\n            bVal = b.price;\n            break;\n          case 'rating':\n            aVal = a.rating;\n            bVal = b.rating;\n            break;\n          default:\n            return 0;\n        }\n\n        if (params.sortOrder === 'desc') {\n          return bVal > aVal ? 1 : -1;\n        }\n        return aVal > bVal ? 1 : -1;\n      });\n    }\n\n    // Apply pagination\n    const limit = params?.limit || 6;\n    const page = params?.page || 1;\n    const startIndex = (page - 1) * limit;\n    const paginatedProducts = filteredProducts.slice(startIndex, startIndex + limit);\n    const totalPages = Math.ceil(filteredProducts.length / limit);\n\n    return {\n      success: true,\n      data: {\n        products: paginatedProducts,\n        totalPages\n      }\n    };\n  },\n\n  getProductById: async (id: string): Promise<ApiResponse<Product>> => {\n    const { data } = await productsAPI.getProducts();\n    const product = data.products.find(p => p.id === id);\n    \n    if (!product) {\n      throw new Error('Product not found');\n    }\n\n    return {\n      success: true,\n      data: product\n    };\n  }\n};\n\n// Orders API\nexport const ordersAPI = {\n  createOrder: async (items: any[], totalAmount: number): Promise<ApiResponse<Order>> => {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    const mockOrder: Order = {\n      id: 'order-' + Date.now(),\n      userId: '1',\n      items,\n      totalAmount,\n      status: 'pending',\n      createdAt: new Date().toISOString(),\n      shippingAddress: {\n        street: '123 Main St',\n        city: 'San Francisco',\n        state: 'CA',\n        zipCode: '94102',\n        country: 'USA'\n      }\n    };\n\n    return {\n      success: true,\n      data: mockOrder\n    };\n  },\n\n  getUserOrders: async (userId: string): Promise<ApiResponse<Order[]>> => {\n    await new Promise(resolve => setTimeout(resolve, 800));\n\n    // Mock orders data\n    const mockOrders: Order[] = [\n      {\n        id: 'order-1',\n        userId: '1',\n        items: [],\n        totalAmount: 289.98,\n        status: 'delivered',\n        createdAt: '2024-12-15T10:30:00Z',\n        shippingAddress: {\n          street: '123 Main St',\n          city: 'San Francisco',\n          state: 'CA',\n          zipCode: '94102',\n          country: 'USA'\n        }\n      },\n      {\n        id: 'order-2',\n        userId: '1',\n        items: [],\n        totalAmount: 159.99,\n        status: 'shipped',\n        createdAt: '2024-12-20T14:15:00Z',\n        shippingAddress: {\n          street: '123 Main St',\n          city: 'San Francisco',\n          state: 'CA',\n          zipCode: '94102',\n          country: 'USA'\n        }\n      }\n    ];\n\n    return {\n      success: true,\n      data: mockOrders\n    };\n  }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}