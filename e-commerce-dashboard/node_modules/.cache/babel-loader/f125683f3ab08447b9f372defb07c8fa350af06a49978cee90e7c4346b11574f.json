{"ast":null,"code":"// Day 1 Basic auth slice just login/logout for now\n// Will add more features later as I figure them out\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { authAPI } from '../../services/api';\n\n// Async thunk for login\nexport const loginUser = createAsyncThunk('auth/login', async credentials => {\n  const response = await authAPI.login(credentials);\n  // Store token in localStorage  probably should add error handling later\n  localStorage.setItem('authToken', response.data.token);\n  return response.data;\n});\n\n// Async thunk for verifying existing token\nexport const verifyToken = createAsyncThunk('auth/verifyToken', async token => {\n  const response = await authAPI.verifyToken(token);\n  return response.data;\n});\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('authToken'),\n  // Check if user was already logged in\n  isLoading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.error = null;\n      localStorage.removeItem('authToken'); // Clean up localStorage too\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login cases\n    .addCase(loginUser.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message || 'Login failed';\n    })\n    // Token verification cases\n    .addCase(verifyToken.pending, state => {\n      state.isLoading = true;\n    }).addCase(verifyToken.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload;\n    }).addCase(verifyToken.rejected, state => {\n      state.isLoading = false;\n      state.token = null;\n      localStorage.removeItem('authToken');\n    });\n  }\n});\nexport const {\n  logout,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authAPI","loginUser","credentials","response","login","localStorage","setItem","data","token","verifyToken","initialState","user","getItem","isLoading","error","authSlice","name","reducers","logout","state","removeItem","clearError","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","message","actions","reducer"],"sources":["/Users/faratrout/Desktop/e-commdash/src/store/slices/authSlice.ts"],"sourcesContent":["// Day 1 Basic auth slice just login/logout for now\n// Will add more features later as I figure them out\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { AuthState, LoginCredentials } from '../../types';\nimport { authAPI } from '../../services/api';\n\n// Async thunk for login\nexport const loginUser = createAsyncThunk(\n  'auth/login',\n  async (credentials: LoginCredentials) => {\n    const response = await authAPI.login(credentials);\n    // Store token in localStorage  probably should add error handling later\n    localStorage.setItem('authToken', response.data.token);\n    return response.data;\n  }\n);\n\n// Async thunk for verifying existing token\nexport const verifyToken = createAsyncThunk(\n  'auth/verifyToken',\n  async (token: string) => {\n    const response = await authAPI.verifyToken(token);\n    return response.data;\n  }\n);\n\nconst initialState: AuthState = {\n  user: null,\n  token: localStorage.getItem('authToken'), // Check if user was already logged in\n  isLoading: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      state.user = null;\n      state.token = null;\n      state.error = null;\n      localStorage.removeItem('authToken'); // Clean up localStorage too\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Login cases\n      .addCase(loginUser.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.error.message || 'Login failed';\n      })\n      // Token verification cases\n      .addCase(verifyToken.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(verifyToken.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.user = action.payload;\n      })\n      .addCase(verifyToken.rejected, (state) => {\n        state.isLoading = false;\n        state.token = null;\n        localStorage.removeItem('authToken');\n      });\n  },\n});\n\nexport const { logout, clearError } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}